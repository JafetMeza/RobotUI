<Window x:Class="RobotArm_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RobotArm_GUI"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        WindowStartupLocation="CenterScreen"
        Title="Robot UI" 
        Height="800"
        Width="1100"
        mc:Ignorable="d">

    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy"/>
    </Window.CommandBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost
        Identifier="RootDialog"
        DialogTheme="Inherit"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Right" 
                        Margin="16"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>

                    <!--<TextBox 
                        x:Name="DemoItemsSearchBox"
                        Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="16, 4"
                        Width="200"
                        materialDesign:HintAssist.Hint="Search"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="4"/>-->
                    
                    <ListBox 
                        x:Name="DemoItemsListBox" 
                        Margin="0 16 0 16"
                        SelectedIndex="{Binding SelectedIndex}"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding DemoItems}"
                        PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                        AutomationProperties.Name="DemoPagesListBox">
                        <ListBox.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Text="{Binding .}" Margin="32 0 32 0"
                                           AutomationProperties.AutomationId="DemoItemPage"
                                           Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                           FontSize="18"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <materialDesign:ColorZone
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    Mode="PrimaryMid"
                    DockPanel.Dock="Top">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                Click="MenuToggleButton_OnClick"
                                AutomationProperties.Name="HamburgerToggleButton"/>

                            <Button
                                Margin="24,0,12,0"
                                ToolTip="Desconectar"
                                Command="{Binding MovePrevCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Button 
                                Margin="8,0,0,0"
                                ToolTip="Next Item"
                                Command="{Binding MoveNextCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        </StackPanel>

                        <Button DockPanel.Dock="Right"
                                ToolTip="Desconectar"
                                Click="Button_Click_1" Padding="0"
                                Content="{materialDesign:PackIcon Kind=CloseCircleOutline, Size=30}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                        
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="22"
                            AutomationProperties.Name="Interfaz Grafica Brazo Robot"
                            Text="Interfaz Grafica Brazo Robot"/>

                        
                    </DockPanel>
                    
                </materialDesign:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <!--<ScrollViewer
                        Grid.Row="1" 
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                        VerticalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}" 
                        Padding="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.MarginRequirement}">
                        <ContentControl
                            Content="{Binding SelectedItem.Content, UpdateSourceTrigger=PropertyChanged}"/>
                    </ScrollViewer>-->

                    <!--<materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        MessageQueue="{materialDesign:MessageQueue}"
                        Grid.Row="1"/>-->

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Enviar mensajes a robot" Margin="32 5 32 0"
                                   AutomationProperties.AutomationId="DemoItemPage"
                                   Grid.Column="1" Style="{StaticResource MaterialDesignTextBlock}"
                                   Foreground="DarkMagenta"
                                   FontSize="28"/>

                        <TextBlock Text="Seleccione un puerto" Margin="32 5 32 0"
                                   AutomationProperties.AutomationId="DemoItemPage"
                                   Foreground="Black" Grid.Column="1" Grid.Row="1"
                                   FontSize="22" VerticalAlignment="Center" 
                                   HorizontalAlignment="Right"/>
                        <ComboBox x:Name="Puertos" Grid.Column="2" Grid.Row="1"
                                  Margin="10,0,60,0" ToolTip="Selecciona un puerto"/>

                        <Button Style="{StaticResource MaterialDesignRaisedAccentButton}"
                                Margin="40,0,40,0" Grid.Row="2" Grid.Column="2"
                                ToolTip="Conectar con Microcontrolador"
                                Content="Conectar" Click="Button_Click"/>

                        <Grid Grid.Row="4" Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Q0: " Margin="32 5 32 0"
                                   AutomationProperties.AutomationId="DemoItemPage"
                                   Foreground="Black" Grid.Column="0"
                                   FontSize="22" VerticalAlignment="Center" 
                                   HorizontalAlignment="Right"/>
                            <TextBox x:Name="Q0" Grid.Column="1"
                                 FontSize="22" VerticalAlignment="Center"
                                 Margin="32 5 32 0" Width="100" ToolTip="Valor de Q0"
                                 HorizontalAlignment="Left"/>
                        </Grid>

                        <Grid Grid.Row="4" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Q1: " Margin="32 5 32 0"
                                   AutomationProperties.AutomationId="DemoItemPage"
                                   Foreground="Black" Grid.Column="0"
                                   FontSize="22" VerticalAlignment="Center" 
                                   HorizontalAlignment="Right"/>
                            <TextBox x:Name="Q1" Grid.Column="1"
                                 FontSize="22" VerticalAlignment="Center"
                                 Margin="32 5 32 0" Width="100" ToolTip="Valor de Q1"
                                 HorizontalAlignment="Left"/>
                        </Grid>

                        <Grid Grid.Row="4" Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Q2: " Margin="32 5 32 0"
                                   AutomationProperties.AutomationId="DemoItemPage"
                                   Foreground="Black" Grid.Column="0"
                                   FontSize="22" VerticalAlignment="Center" 
                                   HorizontalAlignment="Right"/>
                            <TextBox x:Name="Q2" Grid.Column="1"
                                 FontSize="22" VerticalAlignment="Center"
                                 Margin="32 5 32 0" Width="100" ToolTip="Valor de Q2"
                                 HorizontalAlignment="Left"/>
                        </Grid>


                        <Button Style="{StaticResource MaterialDesignRaisedDarkButton}"
                                Margin="40,0,40,0" Grid.Row="5" Grid.Column="2"
                                ToolTip="Enviar Datos"
                                Content="Enviar" Click="Button_Click_2"/>
                    </Grid>
                    <!--<materialDesign:Snackbar
                        x:Name="MainSnackbar"
                        MessageQueue="{materialDesign:MessageQueue}"
                        Grid.Row="1"/>-->
                    <Grid x:Name="StatusBar" Background="DarkMagenta" 
                          Grid.Row="1">
                        <TextBlock Foreground="White" Margin="5"
                                   FontWeight="Bold" x:Name="StatusText"
                                   FontSize="15" Text="Desconectado"/>
                    </Grid>
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
